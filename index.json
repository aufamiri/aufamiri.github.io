[{"categories":null,"contents":"Background Story Setelah proses instalasi icinga2 pada Raspberry Pi berhasil, saya perlu menemukan cara kalau server yang saya pantau sedang down. Icinga2 sendiri memiliki beberapa protokol yang bisa digunakan untuk mengirimkan notifikasi, menurut saya, yang paling enak adalah mengirimkan notifikasi melalui email sehingga notifikasi tersebut pasti akan langsung masuk ke HP saya. Selain itu, proses konfigurasi yang (seharusnya) relatif mudah juga menjadi salah satu faktor utama.\nRequirements  Raspberry PI akun gmail  Installation Sebelum Mulai Secara default, gmail akan memblokir akses ke akun email melalui port 587. Satu - satunya cara adalah dengan melakukan enable pada Less Secure App Access di bagian setting google.\n Masuk ke bagian pengaturan google Pilih tab Security Enable Less Secure App Access  Note : Apabila akun menggunakan 2FA, bisa menggunakan App Passwod. Petunjuk untuk melakukan itu bisa dilihat disini\nInstall SMTP client Kita perlu menginstall sebuah client untuk membantu kita dalam membuat request kepada smtp milik gmail, ada banyak sekali smtp client yang terkenal dan sering dipakai, seperti misalnya ssmtp, msmtp dan OpenSMTPD. Disini saya akan menggunakan msmtp karena walaupun ssmtp lebih terkenal dan lebih sering dipakai, per bulan Maret 2019 status ssmtp berubah menjadi unmantained.\nsilahkan lakukan command berikut :\nsudo apt update sudo apt install msmtp msmtp-mta Kemudian masuk ke direktori $HOME dan bikin file baru dengan nama .msmtprc\nSilahkan copy paste isi file .msmtprc:\n# Set default values for all following accounts. defaults auth on tls on tls_trust_file /etc/ssl/certs/ca-certificates.crt logfile ~/.msmtp.log # Gmail account gmail host smtp.gmail.com port 587 from USERNAME_GMAIL@gmail.com user USERNAME_GMAIL password PASSWORD_GMAIL # Set a default account account default : gmail penjelasan auth : lakukan autentikasi pada server smtp yang dituju tls : gunakan protokol tls tls_trust_file : ca-certificates untuk sertificate tls nya logfile : lokasi tempat msmtp menyimpan log file nya.\naccount : nama akun host : server smtp yang ingin dihubungkan port : port smtp server (biasanya 465 atau 587) from : sender email user : username akun email password : password akun email\naccount default : opsi ini berguna apabila terdapat beberapa email dalam satu konfigurasi, sebagai akun default tempat email dikirimkan\nuntuk mengetest apakah konfigurasi sudah benar atau tidak, lakukan command berikut : echo \u0026quot;HALO\u0026quot; | mail -s \u0026quot;test\u0026quot; email.tujuan@gmail.com apabila email sudah diterima di email tujuan, selamat, berarti konfigurasi sudah benar !\n","permalink":"https://chillytaka.github.io/blog/install-smtp-client/","tags":["Linux","Server"],"title":"Install Smtp Client"},{"categories":null,"contents":"Efisiensi is an app for booking bus tickets accross Indonesia. It has many feature such as multiple tickets booking, self-select seats, see purchase history, easy boarding by only showing the app, and many more !.\n","permalink":"https://chillytaka.github.io/projects/efisiensi/","tags":["Flutter","Android","Apps"],"title":"Efisiensi"},{"categories":null,"contents":"Plasma adalah satu DE yang paling terkenal dan paling banyak dipakai di Linux. Salah satu aspek yang paling disukai oleh para penggunanya adalah kustomisasinya yang sangat banyak, tapi, masih membuat usernya lebih produktif. Untuk pengguna yang baru menyelami Linux, sepertinya DE Plasma ini menjadi salah satu DE yang paling sering dipilih karena kemiripannya dengan UI Windows pada umumnya.\nI3 adalah sebuah WM yang paling sering digunakan oleh pengguna Linux yang sudah cukup advance. Ukurannya yang kecil baik dari sisi memory maupun storage, ditambah dengan semakin berkurangnya user untuk menggunakan mouse (terutama dalam hal pindah - pindah window) membuat banyak sekali orang suka dengan filosofi dasar dari I3 ini.\nDari tadi, saya pakai term aneh - aneh seperti DE dan WM, tapi, apakah 2 kata itu ? DE atau Dekstop Environment adalah tampilan dari suatu desktop di Linux. Anggap saja seperti Launcher kalo di Android. DE sendiri ada banyak macemnya, mulai dari Plasma, Gnome, Budgie, Deepin dan banyak lagi.\nSedangkan WM, atau Window Manager basically adalah bagian dari suatu DE yang bertanggung jawab untuk mengatur behaviour dari window - window dari program. Biasanya, suatu DE sudah memiliki WM yang diinclude kan di dalamnya, sebagai contoh adalah Plasma dengan KWin nya. Namun, ada juga WM yang dapat berdiri sendiri, seperti I3, Awesome, BSPWM dan banyak lagi.\nTerkadang, Plasma (walaupun tampilannya sangat enak dilihat dan mudah dipake) masih memerlukan penggunanya untuk banyak pakai mouse dan sebagai seorang yang lumayan sering ngetik, sering - sering pegang mouse sepertinya bukan ide yang bagus karena bisa saja menimbulkan carpal-tunner dan sesuatu yang seperti itu. Di sisi lain, I3, setupnya makan banyak waktu, belum lagi kalo perlu debug gara - gara ada hal absurd yang terjadi yang disebabkan oleh config yang ga beres.\nSolusinya ? Gabungkan saja dua DE dan WM yang paling banyak dipake ini dan jadilah, sebuah Desktop yang mudah dioperasikan dari Plasma, tapi masih terasa jejak - jejak ketangkasan dari I3. Tentu saja ditambah tampilan yang unik dan lebih enak dipandang dari desktop Plasma biasa.\nPrequisites  plasma, (kayaknya udah pasti deh\u0026hellip; \u0026lsquo;-') i3-gaps atau kalo mau pinggiran windownya rada rounded, bisa pakai i3-gaps-rounded-git picom, kompositor yang lebih modern, penerus compton feh, wallpaper changer  Installations  Install seluruh package yang dibutuhkan pakai pacman atau yay. Kalau pake distro Linux yang lain (misal, Ubuntu) silahkan disesuaikan.  sudo pacman -Syy sudo pacman-S feh picom i3-gaps ``` atau, kalau ingin pakai yang versi rounded dari I3, kebetulan sudah ada yang bikin packagenya di [AUR](https://aur.archlinux.org/packages/i3-gaps-rounded-git/), silahkan pakai command ini apabila sudah terinstall yay sebelumnya. Atau kalau belum, bisa pakai AUR Helper lain atau ikuti [ini](https://wiki.archlinux.org/index.php/Arch_User_Repository#Installing_and_upgrading_packages) ``` sudo pacman -Syy yay -S i3-gaps-rounded-git ``` 2. jalankan `i3-config-wizard`. Command ini akan otomatis membuat config default I3 yang nantinya akan dikustomisasi lebih lanjut. ### Replace KWIN with I3 KWIN adalah WM yang sudah secara default dipakai di Plasma. Sebenarnya sudah ada dokumentasi yang lebih lengkap tentang bagaimana cara mengganti KWIN dengan WM yang lain di [site docs plasma](https://userbase.kde.org/Tutorials/Using_Other_Window_Managers_with_Plasma), tapi ya demi catetan yang lengkap, saya copas-kan saja kesini. 1. Buat bash script baru dan kasih nama `wm.sh`, copas code dibawah: ``` #!/bin/sh export KDEWM=/usr/bin/i3 ``` Inti dari kode diatas adalah mengganti variabel default KDEWM yang awalnya adalah KWIN atau `/usr/bin/kwin` menjadi path ke I3. Plasma nantinya tinggal melakukan eksekusi KDEWM seperti biasa. 2. Buka terimnal, navigate ke direktori tempat script `wm.sh` tadi dibuat dan jalankan command `chmod +x wm.sh` supaya scriptnya bisa di execute. 3. Masuk ke **System Settings** -\u0026gt; **Startup and Shutdown** -\u0026gt; **AutoStart** 4. Klik tombol **Add Script** 5. Arahkan ke file yang sudah dibuat 6. Di kolom **Run On**, pilih **Before Session Startup** dari pilihan yang ada ![plasma-autostart.png](/img/plasma-autostart.png) \u0026gt; ⚠️ **Warning** ⚠️ : Jangan log out atau melakukan restart tanpa melakukan setup I3 terlebih dulu karena dapat menimbulkan masalah seperti ga bisa login balik ke desktop ### Configuring I3 Berhubung saya sudah merasa nyaman dan enak dengan keybinding dari VIM (Bahkan VSCode juga pake keybinding VIM :V), setup I3 saya kebanyakan mengambil dari sana. Kalo kurang suka dengan VIM, silahkan edit saja, ndak sulit kok. Ada beberapa pengaturan yang wajib ada dalam file config I3 ini, kebanyakan dari setting - setting yang harus ada itu adalah konfigurasi khusus untuk Plasma seperti beberapa app yang harus di set sebagai floating window, notification shade agar tidak \u0026#34;mencuri\u0026#34; fokus saat muncul, dan banyak lagi... 1. Pergi ke https://gitlab.com/chillytaka/dotfiles/-/blob/master/i3_plasma/config dan download seluruh file yang ada. 2. Copas file yang sudah di download ke `/home/$USER/.config/i3/` (Ganti `$USER` dengan username saat ini). Kalo direktori `i3` nya belum ada, silahkan dibikin dulu. ### Kustomisasi I3 Before you start, there is a few things to watch out for Sebelum melakukan restart atau log out, ada beberapa hal yang harus diperhatikan terlebih dahulu ### Merubab Default Modifier Dalam I3 terdapat konsep modifier atau `$mod`. Ini digunakan oleh I3 untuk membedakan shortcut mana yang untuk I3, dan yang mana untuk program yang lain. Dalam konfigurasi dotfiles saya, saya memilih untuk menggunakan modifier `super`, karena.. yaa daripada ga kepake kan :v. Tapi kalo mau, bisa diganti menjadi tombol `Alt` dengan cara : 1. Pergi ke direktori `/home/$USER/.config/i3/` dan buka file `config` yang ada di situ. 2. Cari line set $mod Mod4\ndan ganti dengan set $mod Mod1\n#### Merubah Konfigurasi Shortcut Untuk informasi lebih lengkap tentang konfigurasi yang biasanya saya gunakan, silahkan lihat [dokumentasi berikut ini](https://gitlab.com/chillytaka/dotfiles#shortcut). Silahkan diganti senyamannya. Contoh, untuk merubah shortcut untuk menutup window dari yang awal nya `$mod+shift+w` (menutup window disini maksudnya mirip seperti saat melakukan shortcut `alt+F4` yang biasa), cari line berikut : kill focused window bindsym $mod+Shift+w kill\ndan rubah ke (misal) `$mod+Ctrl+q` kill focused window bindsym $mod+Ctrl+q kill\n--- #### Merubah Folder Wallpaper Wallpaper disini dihandle menggunakan software `feh`. Default folder yang akan digunakan sebagai sumber foto wallpaper berada di `/home/$USER/Pictures/WP`. Ganti aja sesuai kebutuhan. 1. Pergi ke direktori `/home/$USER/.config/i3/` dan buka file `config` yang ada di situ. 2. cari line ini exec \u0026ndash;no-startup-id feh \u0026ndash;randomize \u0026ndash;bg-fill $HOME/Pictures/WP\ndan ganti sesuai keinginan. Kalau tidak kepingin menggunakan 1 folder, bisa juga dengan hanya menggunakan 1 file seperti ini : exec \u0026ndash;no-startup-id feh \u0026ndash;bg-fill $HOME/Pictures/cool-wallpaper.png\ndokumentasi FEH dapat dilihat [disni](https://www.systutorials.com/docs/linux/man/1-feh/), atau buka terminal dan masukkan command `feh --help` --- #### Rounded Gaps Kalau memilih varian rounded dari I3, tambahkan line ini dibagian paling bawah config. 1. Pergi ke direktori `/home/$USER/.config/i3/` dan buka file `config` yang ada di situ. 2. tambahkan line berikut. #Border Radius border_radius 10\n### Konfigurasi Picom Picom adalah sebuah XWindow Compositor. Normalnya, Plasma sudah memiliki compositor built-in yang sudah secara otomatis terinstall saat kita melakukan instalasi Plasma. Sayangnya, kompositor bawaan Plasma ini tidak bisa mempengaruhi window yang dihandle oleh I3, sehingga mau tidak mau, kita harus menggunakan kompositor lain. Dan salah satu yag paling sering digunakan saat ini adalah Picom. Tapi, apa sih kompositor itu ? Kompositor adalah sebuah program simpel yang akan memberi arahan pada XServer (Software yang menghandle seluruh GUI di Linux) bagaimana caranya untuk melakukan render suatu window. Beberapa kompositor sangat basic dengan settingan yang default dan tidak bisa dikustomisasi lagi, beberapa yang lain memiliki fitur yang sangat banyak dengan kustomisasi seabrek. Dan FYI, kompositor inilah yang membuat window di screenshot di atas menjadi sedikit transparent dengan background blur dan tidak full opaque pada umumnya. Untuk menambahkan konfigurasi picom tersebut, silahkan lakukan langkah berikut, 1. Bikin direktori baru di `/home/$USER/.config/picom` (Ganti `$USER` dengan username saat ini). 2. Donwload file konfigurasi di https://gitlab.com/chillytaka/dotfiles/-/blob/master/picom/picom.conf 3. Copas file nya ke `/home/$USER/.config/picom/` ### Reload \u0026amp; Enjoy Setelah semuanya disetup dengan baik dan benar, coba Log Out / Restart / Cabut - Pasang. Dan nikmati tampilan plasma yang baru ^_^","permalink":"https://chillytaka.github.io/blog/plasma-with-i3/","tags":["Linux","UI","Plasma","I3"],"title":"Lazy Modder, Combining Plasma with I3"},{"categories":null,"contents":"A group project as one of the requirement to pass Telematics Project course. The SmartChair project is a chair with the ability to remind you if you have sitting for too long and it has a treatment mode to treat hemorrhoid by heating the sitting area.\n","permalink":"https://chillytaka.github.io/projects/smart-chair/","tags":["Android","Java","Apps","IoT","Arduino"],"title":"Smart Chair"},{"categories":null,"contents":"EVOLTY is an annual event from Electric Engineering Faculy. I work on their main website, along with some additional functionalities such as general administration system.\n","permalink":"https://chillytaka.github.io/projects/evolty-2020-main-website/","tags":["Website","Laravel"],"title":"Evolty 2020 Main Website"},{"categories":null,"contents":"Foculance is an app to control other apps or games by giving those apps a usage time limit for children. The intended usage is to monitor and children phone usage throughout the day with hassle free setup from parents. Foculance is able to achieved 3rd place on GEMASTIK XII category Softwawre Development on 2019.\n","permalink":"https://chillytaka.github.io/projects/foculance/","tags":["Android","Java","Apps"],"title":"Foculance"},{"categories":null,"contents":"MAGE is an annual event from Computer Engineering degree at Sepuluh Nopember Institute of Technology. I work on their main website, along with some additional functionalities such as online test system and general administration system.\n","permalink":"https://chillytaka.github.io/projects/mage/","tags":["Website","Laravel"],"title":"Mage 5 Main Website"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml\n[outputs] home = [\u0026#34;HTML\u0026#34;, \u0026#34;JSON\u0026#34;] Searching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category\n... \u0026#34;contents\u0026#34;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026#34;tags\u0026#34;:{{ .Params.tags | jsonify }}{{end}}, \u0026#34;categories\u0026#34; : {{ .Params.categories | jsonify }}, ... Edit fuse.js options to Search static/js/search.js\nkeys: [ \u0026#34;title\u0026#34;, \u0026#34;contents\u0026#34;, \u0026#34;tags\u0026#34;, \u0026#34;categories\u0026#34; ] ","permalink":"https://chillytaka.github.io/search/","tags":null,"title":"Search Results"}]